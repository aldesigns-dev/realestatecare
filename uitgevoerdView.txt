<!-- UitgevoerdView.vue -->
<template>
  <h1>Uitgevoerde rapportages</h1>
  <v-container>

    <!-- Itereren over de inspecties -->
    <v-card v-for="inspection in filledInspections" :key="inspection.id" class="mb-8">
      <!-- Weergeven adres van de inspectie -->
      <v-card-title>{{ inspection.address }}</v-card-title>
      <v-card-text>
        <v-list>
          <!-- Itereren over elk inspectiedoel van de inspectie -->
          <v-list-item v-for="(goal, index) in inspection.inspection_goals" :key="index">
            <!-- Weergave naam inspectiedoel -->
            <v-list-item-title>{{ goal.goal }}</v-list-item-title>
            <!-- Controleren of het inspectiedoel is ingevuld -->
            <ul v-if="isGoalFilled(goal)">
              <!-- Itereren over de opties van het inspectiedoel -->
              <li v-for="(value, key) in goal.options" :key="key">
                <!-- Weergave optienaam en waarde -->
                {{ key }}: <span class="option-value">{{ value.value }}</span>
              </li>
            </ul>
            <!-- Als het inspectiedoel niet is ingevuld -->
            <template v-else>
              <!-- Weergave button om inspectiedoel in te vullen -->
              <v-btn variant="flat" class="i-card-btn">Invullen</v-btn>
            </template>
          </v-list-item>
        </v-list>
      </v-card-text>
    </v-card>

  </v-container>
</template>

<script>
import inspectieData from '@/data/inspectieData'

export default {
  name: 'UitgevoerdView',
  data() {
    return {
      inspectieData
    }
  },
  computed: {
    filledInspections() {
      // Filteren van ingevulde inspecties
      return this.inspectieData[0].inspections.filter(inspection => {
        // Controleren of minstens één inspectiedoel is ingevuld
        return inspection.inspection_goals.some(goal => {
          // Controleren of minstens één optie van het inspectiedoel is ingevuld
          return Object.values(goal.options).some(option => option.value !== "");
        });
      });
    }
  },
  methods: {
    isGoalFilled(goal) {
      // Controleren of minstens één optie van het inspectiedoel is ingevuld
      return Object.values(goal.options).some(option => option.value !== "");
    }
  }
}
</script>

<style>
.v-card {
  width: 100%;
  border-radius: 15px;
  background: rgb(var(--v-theme-surface));
  margin-bottom: 12px;
  margin-top: -12px;
}
.v-list-item-title {
  color: rgb(var(--v-theme-primary));
  font-size: 0.975rem;
  font-weight: 500;
  padding-right: 5px;
}
.option-value {
  font-weight: 600;
}
.i-card-btn {
  background-color: rgb(var(--v-theme-surface-variant));
  font-size: 0.775rem;
  text-transform: initial;
}
</style>






"options": {
            "Locatie": { "value": "Voordeur" },
            "Nieuwe schade": { "value": "Ja" },
            "Soort schade": { "value": "Slijtage" },
            "Datum": { "value": "14-04-2024" },
            "Acute actie vereist": { "value": "Ja" },
            "Omschrijving": { "value": "Slot defect" },
            "Foto's": { "value": "" }
          }

